// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeUserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandle holds the string denoting the user_to_picture_edge_very_long_name_longer_than_the_amount_that_postgres_can_really_handle edge name in mutations.
	EdgeUserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandle = "user_to_picture_edge_very_long_name_longer_than_the_amount_that_postgres_can_really_handle"
	// Table holds the table name of the user in the database.
	Table = "users"
	// UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandleTable is the table that holds the user_to_picture_edge_very_long_name_longer_than_the_amount_that_postgres_can_really_handle relation/edge. The primary key declared below.
	UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandleTable = "user_user_to_picture_edge_very_long_name_longer_than_the_amount_that_postgres_can_really_handle"
	// UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandleInverseTable is the table name for the Picture entity.
	// It exists in this package in order to avoid circular dependency with the "picture" package.
	UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandleInverseTable = "pictures"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldAge,
	FieldName,
}

var (
	// UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandlePrimaryKey and UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandleColumn2 are the table columns denoting the
	// primary key for the user_to_picture_edge_very_long_name_longer_than_the_amount_that_postgres_can_really_handle relation (M2M).
	UserToPictureEdgeVeryLongNameLongerThanTheAmountThatPostgresCanReallyHandlePrimaryKey = []string{"user_id", "picture_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
